
version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: sneaker_library_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sneaker_library}
      POSTGRES_USER: ${POSTGRES_USER:-sneaker_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - sneaker_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sneaker_user -d sneaker_library"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кэширования (опционально, для будущего использования)
  # redis:
  #   image: redis:7-alpine
  #   container_name: sneaker_library_redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - sneaker_network
  #   command: redis-server --appendonly yes
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 5

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  sneaker_network: